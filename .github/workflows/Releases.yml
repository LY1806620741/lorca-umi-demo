name: Releases

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft:fast
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
    - name: build-win
      run: |
        npm install yarn
        yarn install
        yarn build
        go generate
        go env -w GOOS=windows
        go build --tags withsource -ldflags "-H windowsgui"
    - name: Upload windows artifact
      uses: actions/upload-release-asset@v1
      with:
        uoload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: jieshao.loract-umi-demo.exe
        asset_name: jieshao.loract-umi-demo.exe
        asset_content_tpye: application/vnd.microsoft.porttable-executable
